[
    {
        "cypher": "MATCH (e:Editor) RETURN e.Age, COUNT(e) ORDER BY e.Age",
        "gql": "❌MATCH (e:Editor)\nRETURN e.Age, COUNT(e) AS `count`\nORDER BY e.Age\nNEXT RETURN e.Age, `count`"
    },
    {
        "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine) WHERE r.zone = 1 WITH r, count(m) as machineCount WHERE machineCount > 3 RETURN r.name",
        "gql": "❌MATCH (r:Rack)-[:HOLDS]->(m:Machine) WHERE r.zone = 1\nRETURN r, count(m) AS machineCount\nNEXT RETURN r.name WHERE machineCount > 3"
    },
    {
        "cypher": "MATCH (m:Movie) WHERE m.release_date < date('1990-01-01') RETURN m.title, m.revenue ORDER BY m.revenue ASC LIMIT 3",
        "gql": "MATCH (m:Movie) WHERE m.release_date < date('1990-01-01') RETURN m.title, m.revenue ORDER BY m.revenue ASC LIMIT 3"
    },
    {
        "cypher": "MATCH (s:Stadium) RETURN s.Country AS country, count(*)",
        "gql": "MATCH (s:Stadium) RETURN s.Country AS country, count(*) NEXT RETURN country, count(*)"
    },
    {
        "cypher": "MATCH (f:Farm) WHERE f.Total_Horses > 5000 RETURN avg(f.Working_Horses)",
        "gql": "❌MATCH (f:Farm) WHERE f.Total_Horses > 5000 RETURN avg(f.Working_Horses) AS `avg` NEXT RETURN `avg`"
    },
    {
        "cypher": "MATCH (q:Question) WHERE q.answered = true RETURN q ORDER BY q.upVotes DESC LIMIT 3",
        "gql": "MATCH (q:Question) WHERE q.answered = true RETURN q ORDER BY q.upVotes DESC LIMIT 3"
    },
    {
        "cypher": "MATCH (e:Entity)-[:registered_address]->(a:Address) WHERE a.countries = 'Hong Kong' RETURN e.name AS entity_name, a.address AS entity_address LIMIT 5",
        "gql": "MATCH (e:Entity)-[:registered_address]->(a:Address) WHERE a.countries = 'Hong Kong' RETURN e.name AS entity_name, a.address AS entity_address LIMIT 5"
    },
    {
        "cypher": "MATCH (m:Movie) WHERE m.votes > 100 RETURN m.title",
        "gql": "MATCH (m:Movie) WHERE m.votes > 100 RETURN m.title"
    },
    {
        "cypher": "MATCH (o:Organization) WHERE o.revenue > 1.0E9 RETURN o.name, o.revenue",
        "gql": "MATCH (o:Organization) WHERE o.revenue > 1.0E9 RETURN o.name, o.revenue"
    },
    {
        "cypher": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:REVIEWED]-(p) RETURN p.name LIMIT 3",
        "gql": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:REVIEWED]-(p) RETURN p.name LIMIT 3"
    },
    {
        "cypher": "MATCH (n:UpdateDate) MATCH (m:Topic) RETURN n.update_date, m.label LIMIT 8",
        "gql": "MATCH (n:UpdateDate) MATCH (m:Topic) RETURN n.update_date, m.label LIMIT 8"
    },
    {
        "cypher": "MATCH (n:Article {abstract:'  I associate to a global field K a Lax-Phillips scattering which has the property of causality if and only if the Riemann Hypothesis holds for all the abelian L-functions of K. As a Hilbert space closure problem this provides an adelic variation on a theme initiated by Nyman and Beurling. The adelic aspects are related to previous work by Tate, Iwasawa and Connes. '}) RETURN n",
        "gql": "MATCH (n:Article {abstract:'  I associate to a global field K a Lax-Phillips scattering which has the property of causality if and only if the Riemann Hypothesis holds for all the abelian L-functions of K. As a Hilbert space closure problem this provides an adelic variation on a theme initiated by Nyman and Beurling. The adelic aspects are related to previous work by Tate, Iwasawa and Connes. '}) RETURN n"
    },
    {
        "cypher": "MATCH (r:Region)-[:AFFECTS]-(s:Storm) WHERE s.Number_Deaths >= 10 RETURN r.Region_name",
        "gql": "MATCH (r:Region)-[:AFFECTS]-(s:Storm) WHERE s.Number_Deaths >= 10 RETURN r.Region_name"
    },
    {
        "cypher": "MATCH p=(a:Author{author_id:'f6bcab8e721fbec0f293fee49d73c9c4'})-[*]->(d:UpdateDate{update_date:'2014-11-11'}) RETURN count(p)",
        "gql": "MATCH p=(a:Author{author_id:'f6bcab8e721fbec0f293fee49d73c9c4'})-[]->{0,}(d:`UpdateDate`{update_date:'2014-11-11'}) RETURN count(p)"
    },
    {
        "cypher": "MATCH (n:Topic), (:Topic {description: 'Focusing on techniques and concepts related to transformations, solutions, and properties of linear equations and matrices, including Jordan normal form, eigenvalues, eigenvectors, diagonalization, and eigenformulations.'}) WHERE NOT (n) --> (:Topic) RETURN n.label",
        "gql": "MATCH (n:Topic), (:Topic {description: 'Focusing on techniques and concepts related to transformations, solutions, and properties of linear equations and matrices, including Jordan normal form, eigenvalues, eigenvectors, diagonalization, and eigenformulations.'}) WHERE NOT EXISTS {(n)-[]->(:Topic)} RETURN n.label"
    },
    {
        "cypher": "MATCH (a:Article)-[:MENTIONS]->(o:Organization) WHERE o.revenue < 5000000 RETURN a.title, a.summary, a.date LIMIT 3",
        "gql": "MATCH (a:Article)-[:MENTIONS]->(o:Organization) WHERE o.revenue < 5000000 RETURN a.title, a.summary, a.date LIMIT 3"
    },
    {
        "cypher": "MATCH (a:Address {countries: 'Samoa'})-[r]-() WITH DISTINCT r.link AS link RETURN link LIMIT 3",
        "gql": "MATCH (a:Address {countries: 'Samoa'})-[]-(n)\nRETURN DISTINCT r.link AS link\nNEXT RETURN link LIMIT 3"
    },
    {
        "cypher": "MATCH (n:Article) -[r:PUBLISHED_IN]->(m:Journal) WHERE r.pages = '263-281' RETURN n.title AS title, count(m) AS count",
        "gql": "MATCH (n:Article)-[r:PUBLISHED_IN]->(m:Journal) WHERE r.pages = '263-281' RETURN n.title AS title, count(m) AS count\nNEXT RETURN title, count"
    },
    {
        "cypher": "MATCH (m:Movie {title: \"Gone with the Wind\"}) RETURN m",
        "gql": "MATCH (m:Movie {title: \"Gone with the Wind\"}) RETURN m"
    },
    {
        "cypher": "MATCH (n:Topic) WHERE n.cluster > 4 OR n.cluster < 5 RETURN n LIMIT 8",
        "gql": "MATCH (n:Topic) WHERE n.cluster > 4 OR n.cluster < 5 RETURN n LIMIT 8"
    },
    {
        "cypher": "MATCH (n) OPTIONAL MATCH (n)-[r]->(m) RETURN n, r, m",
        "gql": "MATCH (n) OPTIONAL CALL { MATCH (n)-[r]->(m) RETURN n, r, m } RETURN n, r, m"
    },
    {
        "cypher": "MATCH (p:Product)-[:PART_OF]->(c:Category) WHERE p.unitsOnOrder = 0 RETURN DISTINCT c.categoryName LIMIT 3",
        "gql": "MATCH (p:`Product`)-[:PART_OF]->(c:Category) WHERE p.unitsOnOrder = 0 RETURN DISTINCT c.categoryName LIMIT 3"
    },
    {
        "cypher": "MATCH (n:Article) WHERE n.comments IS NULL RETURN n LIMIT 8",
        "gql": "MATCH (n:Article) WHERE n.comments IS NULL RETURN n LIMIT 8"
    },
    {
        "cypher": "MATCH (u:User {name: 'Jenny'})-[:WROTE]->(r:Review)-[:REVIEWS]->(b:Business) RETURN b.name AS businessName",
        "gql": "MATCH (u:User {name: 'Jenny'})-[:WROTE]->(r:Review)-[:REVIEWS]->(b:Business) RETURN b.name AS businessName"
    },
    {
        "cypher": "MATCH (f:Filing)-[:BENEFITS]->(e:Entity) WHERE f.beneficiary_bank_country = 'United Kingdom' WITH e, COUNT(f) AS num_filings ORDER BY num_filings DESC LIMIT 5 RETURN e.name AS entity_name, num_filings",
        "gql": "MATCH (f:Filing)-[:BENEFITS]->(e:Entity) WHERE f.beneficiary_bank_country = 'United Kingdom' RETURN e, COUNT(f) AS num_filings ORDER BY num_filings DESC LIMIT 5 NEXT RETURN e.name AS entity_name, num_filings"
    },
    {
        "cypher": "MATCH (r:Rack)-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE r.zone = 3 AND t.ram > 16 RETURN DISTINCT t.type AS machineType",
        "gql": "MATCH (r:Rack)-[:HOLDS]->(m:Machine)-[:TYPE]->(t:Type) WHERE r.zone = 3 AND t.ram > 16 RETURN DISTINCT t.type AS machineType"
    },
    {
        "cypher": "MATCH (c:City) WHERE c.Population > 1000 WITH c MATCH (fc:Farm_competition)-[:TAKES_PLACE_IN]->(c) RETURN fc.Theme",
        "gql": "MATCH (c:City) WHERE c.Population > 1000\nMATCH (fc:Farm_competition)-[:TAKES_PLACE_IN]->(c)\nRETURN fc.Theme"
    },
    {
        "cypher": "MATCH (t:Tweet) RETURN t.text, t.created_at ORDER BY t.created_at DESC LIMIT 5",
        "gql": "MATCH (t:Tweet) RETURN t.text, t.created_at ORDER BY t.created_at DESC LIMIT 5"
    },
    {
        "cypher": "MATCH (m:Movie)<-[:REVIEWED {summary: 'An amazing journey'}]-(:Person) RETURN m",
        "gql": "MATCH (m:Movie)<-[:REVIEWED {summary: 'An amazing journey'}]-(:Person) RETURN m"
    },
    {
        "cypher": "MATCH (c:Customer) WHERE c.region = 'NULL' RETURN c.contactName AS customerName, c.companyName AS companyName",
        "gql": "MATCH (c:Customer) WHERE c.region = 'NULL' RETURN c.contactName AS customerName, c.companyName AS companyName"
    }
]